## Kafka Connector for twitter source
apiVersion: "kafka.strimzi.io/v1beta2"
kind: "KafkaConnector"
metadata:
  name: "twitter-connector"
  labels:
    strimzi.io/cluster: desponge-connect-cluster
spec:
  class: io.debezium.connector.postgresql.PostgresConnector
  tasksMax: 1
  config:
    database.hostname: "192.168.1.20"
    database.port: "5433"
    database.user: "postgres"
    database.password: "1qazxsw2"
    database.dbname: "postgres"
    database.server.name: "testing-debezium"
    table.include.list: "source.tweets"
    schema.include.list: "source"
    slot.name: "twitter_debezium"

# minikube tunnel
#database.user: "${file:/opt/kafka/external-configuration/connector-config/debezium-postgresql-credentials.properties:postgresql_username}"
#database.password: "${file:/opt/kafka/external-configuration/connector-config/debezium-postgresql-credentials.properties:postgresql_password}"
# kubectl -n kafka run kafka-consumer -ti --image=quay.io/strimzi/kafka:0.27.1-kafka-3.0.0 --rm=true --restart=Never -- bin/kafka-console-consumer.sh --bootstrap-server desponge-cluster-kafka-bootstrap:9092 --topic testing-debezium.source.tweets --from-beginning

# kubectl -n kafka exec desponge-cluster-kafka-0 -c kafka -i -t -- bin/kafka-topics.sh --bootstrap-server localhost:9092 --list
# kubectl -n kafka exec desponge-cluster-kafka-0 -c kafka -i -t -- bin/kafka-topics.sh --bootstrap-server localhost:9092 --delete --topic testing-debezium.source.tweets
